--turn on the VM
gcloud compute ssh lab-vm --zone us-east4-c


--export solution container
export DOCKER_TAG=gcr.io/ql-shared-resources-test/defect_solution@sha256:776fd8c65304ac017f5b9a986a1b8189695b7abbff6aa0e4ef693c46c7122f4c


--export variable for port used
export VISERVING_CPU_DOCKER_WITH_MODEL=${DOCKER_TAG}
export HTTP_PORT=8602
export LOCAL_METRIC_PORT=8603
--pull docker images
docker pull ${VISERVING_CPU_DOCKER_WITH_MODEL}

--docker run
docker run -v /secrets:/secrets --rm -d --name "product_inspection" \
--network="host" \
-p ${HTTP_PORT}:8602 \
-p ${LOCAL_METRIC_PORT}:8603 \
-t ${VISERVING_CPU_DOCKER_WITH_MODEL} \
--metric_project_id="${PROJECT_ID}" \
--use_default_credentials=false \
--service_account_credentials_json=/secrets/assembly-usage-reporter.json


--insert python script
gsutil cp gs://cloud-training/gsp895/prediction_script.py .
--copy image to gcs and create bucket
export PROJECT_ID=$(gcloud config get-value core/project)
gsutil mb gs://${PROJECT_ID}
gsutil -m cp gs://cloud-training/gsp897/cosmetic-test-data/*.png \
gs://${PROJECT_ID}/cosmetic-test-data/

--install packages
sudo apt install python3 -y
sudo apt install python3-pip -y
sudo apt install python3.11-venv -y 
python3 -m venv create myvenv
source myvenv/bin/activate
pip install absl-py  
pip install numpy 
pip install requests
--predict defect image
gsutil cp gs://${PROJECT_ID}/cosmetic-test-data/IMG_07703.png .
python3 ./prediction_script.py --input_image_file=./IMG_07703.png  --port=8602 --output_result_file=defective_product_result.json

--predict non defect image
gsutil cp gs://${PROJECT_ID}/cosmetic-test-data/IMG_0769.png
python3 ./prediction_script.py --input_image_file=./IMG_0769.png  --port=8602 --output_result_file=non_defective_product.json